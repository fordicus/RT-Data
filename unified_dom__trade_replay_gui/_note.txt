잠시 다른 질문으로 넘어가보자.
현재 차트 렌더링의 핵심 기능들은
다음 파일들이 구현하고 있어:
unified_dom__trade_replay_gui\frontend\src\main.ts
unified_dom__trade_replay_gui\backend\app.py
unified_dom__trade_replay_gui\backend\loader.py
너에게 리포지토리의 구조와
세가지 파일을 차츰 제공할테니,
각 코드의 가독성과 이해력을 개선해보자.
이해했니?Yes/No

---

먼저, unified_dom__trade_replay_gui\backend\app.py
파일을 RULESET.md에 명시된 규칙에 따라
개선해줘. 이녀석의 역할을 정확히 파악하기 위함이야.

---

unified_dom__trade_replay_gui\backend\loader.py에 대하여
RULESET.md 규칙에 따른 코드개선을 부탁해.
특히 dev_log.md에 명시된
Timestamp Handling와
Duplicate timestamps의 처리 방법에 대해 명확한 안내가
주석으로 포함되기를 원해; docstring & inline.
코드의 기능 자체는 절대 변경하지 말아줘.

---

unified_dom__trade_replay_gui\frontend\src\main.ts에 대하여
RULESET.md 규칙에 따른 코드개선을 부탁해.
다만, 이는 TypeScript이니, RULESET.md 규칙을 적용함에 있어
TypeScript에 맞게 조심스러운 적용이 필요할 것이야.

---

unified_dom__trade_replay_gui\frontend\src\main.ts를 다음과 같이
업데이트하자.

1. https://tradingview.github.io/lightweight-charts/docs/time-zones를
참조하여, end user의 로컬타임을 적용한다. FastAPI에서 넘어온 time 데이터는
UNIX Timestamp이면서, unified_dom__trade_replay_gui\backend\loader.py의
df["time"] = df["time"] / 1000에 의해
ms단위는 소수점이하에 표현된 상태이다.
예를들어, end user의 접속 위치가 스위스라면,
"time"은 UNIX Timestamp가 아닌 스위스 시각기준으로
변경되서 렌더링되어야한다.
이는 차트 전반에 공통으로 적용된다.
Documentation의 설명을 참조하되, overhead가 최소화된
방식으로 구현바란다.

2. 차트 하단의 시간축 레이블을 구현하는
tickMarkFormatter 스펙을 다음과 같이 개선하자:
- 1의 로컬타임변환 후, day의 시작은 00:00:00위치는
tick price data와 무관하게 "YYYY-MM-DD" 포맷으로
해당 위치에 렌더링 할 것.
- day와 day 사이에는 "hh:mm:ss"로 족할 것.

3. Hover tooltip을 구현하자.
Hover tooltip에는 
- "time"
- "value"
- "volume"
- "side"
네가지 정보가 각기 한줄에 렌더링되야한다.
- "time"은 로컬타임이 적용된 "YYYY-MM-DD hh:mm:ss.fff" 포맷을
  heading 없이 출력. 다만 (UTC +몇인지 표기)
- "value"는 heading을 price로 명시하고 체결가격을 적는다.
- "volume"은 unified_dom__trade_replay_gui\backend\loader.py가
넘겨준 값을 그대로 렌더링한다. heading은 volume이라고 한다.
- "side"는 heading을 side로 하고 "volume"은 unified_dom__trade_replay_gui\backend\loader.py가
넘겨준 값을 그대로 렌더링한다.
이를 구현한 Hover tooltip 예시는 다음과 같다:
"YYYY-MM-DD hh:mm:ss.fff (UTC +2)
price:  ...
volume: ...
side:   ...
"
즉, 첫 줄은 헤딩없이.
나머지 줄은 지정된 헤딩 (value가 출력단에서 price로 바뀌었음에 주목하라),
그리고 나머지 줄은 헤딩 이후 출력 내용의 시작 위치가 같게 정렬.

---

문제점:
- 호버 툴팁에 나타난 시각은 로컬타임이 적용되어있으나,
  차트하단 시간축 레이블은 로컬타임 로직이 반영되어있지 않음.
- 호버이벤트 발생시마다 연산이 수행되어 틱 이벤트가 아주 많은
  차트의 경우, 엄청난 연산 오버헤드가 있음:

해결방안:
- Data prefetch caching으로 tooltip fetch 오버헤드 제거 필수
- 최초 차트 로딩시에 이미 로컬타임변환을 하여
  재연산이 일어나지 않고 차트하단 시간축 레이블과
  호버 툴팁의 로컬타임 기준이 동일하도록 변경.
- 나머지 출력 포맷들은 기존의 규칙을 그대로 유지.
  최소한의 필요한 수정에 대해 토론해보자.
  
토론:
- 이미 정정된 코드를 요청하는 것이 아니라,
  너의 의견을 묻는다. 문제점을 파악하고
  어떻게 해결할 것인가, 보다 나은 방법은 없는가를
  이야기해봐.

---

업로드한 최신 버전의 main.ts는 결과가 매우 흡족스럽습니다.
업로드한 최선 버전의 RULESET.md를 토대로
docstring, inline comments, 가독성 등을
원본훼손 없이 개선하여 주시기 바랍니다.

특히 docstring에 오해의 소지를 최소화하기 위해 다음 자료를 강조합니다:
* Start backend:

```bash
uvicorn backend.app:app --reload
```

→ FastAPI runs at:
[`http://localhost:8000/api/tick?symbol=UNIUSDC&date=2025-05-17`](http://localhost:8000/api/tick?symbol=UNIUSDC&date=2025-05-17)

* Start frontend:

```bash
cd frontend && npm run dev
```

→ Frontend runs at:
[`http://localhost:5173`](http://localhost:5173)

즉, 사용자가 bash command를 적절한 위치에서 실행하면
결과물든은 명시된 웹브라우저들에서 확인가능하다는 점을
docstring에 오해의 소지 없이 표현해주길 바랍니다.
다시 한 번 강조하지만, 원본 코드의 기능이 절대로 변경되어서는 안되며,
출력은 채팅창에 곧바로해주세요 (캔버스 말고).

---

TODO:  차트 시야 범위 (viewport)에 따라 tooltip data 제한
문제점: volume이 마이너스 표기됨.

---

C:\workspace\RT-Data\unified_dom__trade_replay_gui\dev_log.md
C:\workspace\RT-Data\unified_dom__trade_replay_gui\plan\_Plan01 – Python FastAPI + TypeScript (Lightweight Charts) Replay Stack.md
C:\workspace\RT-Data\unified_dom__trade_replay_gui\REPO_STRUCT.html

---

차트클릭시 호버가 피벗된다.
차트의 다른 위치 클릭시 호버가 새로운 위치로 피벗된다.

버전도큐를 확인해 우측에 페인 생성.
이 페인은 오더북을 렌더링하기 위함.
단순호버시에 틱의 시간포함 가장 가까운 과거의 오더북을 우측페인에 렌더링.
피벗시에는 피벗시간 기준으로 동일
기능수행.

플레이-포즈 버튼 구현
차트에 피벗이 존재했을 때만 활성화.
피벗시각기준 미래로 차트 틱과 오더북 렌더링 갱신.
배속을 실제 시간과 1:1로 매칭한 것을 1배속으로 함. 최대 100배속 지원.