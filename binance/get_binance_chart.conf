# get_binance_chart.conf
# ----------------------------------------------------------------------------------------
# Configurations for:
#
#	- stream_binance.py
#	- get_binance_chart.py
# ----------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------
# üí± Comma-separated list of Binance spot symbols (UPPERCASE)
# ----------------------------------------------------------------------------------------

SYMBOLS = BTCUSDC,ETHUSDC,SOLUSDC

# ----------------------------------------------------------------------------------------
# üì¶ DOM snapshots are streamed frequently (e.g. every 100ms).
#	This setting controls how long (in minutes) data is written into a single file
#	before switching to a new one. Use 1440 to create one file per day.
# ----------------------------------------------------------------------------------------

SAVE_INTERVAL_MIN = 1

# ----------------------------------------------------------------------------------------
# ‚öôÔ∏è Snapshot queue max size (per symbol)
#   - Limits the maximum number of snapshots held in memory per symbol.
# ----------------------------------------------------------------------------------------

SNAPSHOTS_QUEUE_MAX = 100

# ----------------------------------------------------------------------------------------
# ‚öôÔ∏è Temporary streaming files are merged per day. The temporary files are
#	deleted or not according to `PURGE_ON_DATE_CHANGE` binary flag.
# ----------------------------------------------------------------------------------------

PURGE_ON_DATE_CHANGE = 1

# ----------------------------------------------------------------------------------------
# ‚öôÔ∏è Latency Monitoring Configuration
# ----------------------------------------------------------------------------------------

LATENCY_DEQUE_SIZE	 = 10	# latency_dict[symbol] maxlen
LATENCY_SAMPLE_MIN	 = 10	# minimum number of samples before evaluating readiness
LATENCY_THRESHOLD_MS = 500   # max median latency (in milliseconds) for stream to be 'OK'
LATENCY_SIGNAL_SLEEP = 0.2   # Seconds to sleep between latency signal checks
LATENCY_GATE_SLEEP	 = 1.0   # Seconds to sleep in asyncio tasks

# ----------------------------------------------------------------------------------------
# ‚öôÔ∏è WebSocket Keepalive Ping/Pong Interval (seconds)
#
# - Controls how often the client sends ping frames and waits for pong replies.
# - Set to 0 to disable client pings (recommended for Binance).
# - Binance server sends ping frames to the client every 3 minutes by default.
#   See Section `WebSocket Streams for Binance (2025-01-28)` in
#	   https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md
# ----------------------------------------------------------------------------------------

WS_PING_INTERVAL = 0
WS_PING_TIMEOUT  = 0

# ----------------------------------------------------------------------------------------
# üì¶ Order book save directory (used in stream_binance.py)
# ----------------------------------------------------------------------------------------

LOB_DIR	  = ./data/binance/orderbook/
CHART_DIR = ./data/binance/execution/

# ----------------------------------------------------------------------------------------
# üîÅ Reconnection Strategy Settings (used in stream_binance.py)
# ----------------------------------------------------------------------------------------
# Summary of formula-based backoff logic:
# 
#   backoff = min(MAX_BACKOFF, BASE_BACKOFF ** n) + jitter
#   if n > RESET_CYCLE_AFTER:
#	   n = RESET_BACKOFF_LEVEL
#
# Example progression (without jitter):
#   2^1 = 2s
#   2^2 = 4s
#   2^3 = 8s
#   ...
#   2^7 = 128s ‚Üí exceeds MAX_BACKOFF ‚Üí clamp to 30s
#   next cycle resumes at 2^3 = 8s
# ----------------------------------------------------------------------------------------

BASE_BACKOFF		= 2		# Backoff grows as BASE^n seconds (e.g., 2 ‚Üí 2^n)
MAX_BACKOFF			= 30	# Cap total wait time to MAX seconds
RESET_CYCLE_AFTER	= 7		# After 2^7=128s, reset backoff cycle to avoid permanent MAX
RESET_BACKOFF_LEVEL = 3		# After RESET_CYCLE_AFTER, resume backoff from 2^RESET level

# ----------------------------------------------------------------------------------------  
# üìä Dashboard WebSocket Monitoring Configuration  
# ----------------------------------------------------------------------------------------  
# Controls real-time dashboard monitoring via WebSocket:
#
#   ‚Ä¢	DASHBOARD_STREAM_INTERVAL (float):
#
#		Interval (seconds) between dashboard updates  
#		(lower = higher refresh rate, higher CPU/network usage).  
#
#   ‚Ä¢	MAX_DASHBOARD_CONNECTIONS (int):
#
#		Maximum number of concurrent WebSocket clients  
#		allowed to connect to the `/ws/dashboard` endpoint.  
#
#   ‚Ä¢	MAX_DASHBOARD_SESSION_SEC (int):
#
#		Maximum session duration (seconds) per client  
#		before the connection is gracefully closed.  
#		If set to 0, the session duration is unlimited,  
#		allowing clients to stay connected indefinitely.  
#		No timeout will be enforced, and connections will  
#		only close due to errors or manual disconnection.
#
#   ‚Ä¢	HARDWARE_MONITORING_INTERVAL (float):
#
#		Interval (seconds) for hardware metrics updates  
#		(e.g., CPU, memory, storage, and network usage).  
#
#   ‚Ä¢	CPU_PERCENT_DURATION (float):
#
#		Duration (seconds) for CPU usage sampling.  
#  
# These settings are used exclusively by `stream_binance.py` to manage  
# real-time latency and hardware metrics streaming.  
# ----------------------------------------------------------------------------------------

DASHBOARD_STREAM_INTERVAL	 = 0.05
MAX_DASHBOARD_CONNECTIONS	 = 1
MAX_DASHBOARD_SESSION_SEC	 = 0
HARDWARE_MONITORING_INTERVAL = 1.0
CPU_PERCENT_DURATION		 = 0.2

# ----------------------------------------------------------------------------------------
# ‚ö†Ô∏è System Resource Thresholds (used in stream_binance.py only)
# ----------------------------------------------------------------------------------------
# DESIRED_MAX_SYS_MEM_LOAD:
#   - Maximum allowed system memory load (as a float, 0.0 ~ 100.0).
#   - If exceeded, triggers async gc.collect() in stream_binance.py.
#   - Example: 50.0 means 50% memory usage threshold.
#   - ‚ö†Ô∏è This system is designed under the assumption that only
#     a single instance of stream_binance.py runs atomically at a time.
# ----------------------------------------------------------------------------------------

DESIRED_MAX_SYS_MEM_LOAD = 85.0

# ----------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------  
# üß™ Profiling Configuration (used in stream_binance.py only)  
# ----------------------------------------------------------------------------------------

# PROFILE_DURATION = 3600	# Seconds; 0 disables profiling
PROFILE_DURATION = 0

# ----------------------------------------------------------------------------------------
# Used by stream_binance.py and/or get_binance_chart.py
#
# ‚è±Ô∏è TIMEOUT:
#	- Used only in get_binance_chart.py.
#	- Maximum allowed time (seconds) for each curl request.
#
# ‚öôÔ∏è MAX_WORKERS:
#	- Used in get_binance_chart.py as ThreadPoolExecutor worker count (download).
#	- Used in stream_binance.py as ProcessPoolExecutor worker count (daily merge).
#	- Controls parallelism in both scripts.
# ----------------------------------------------------------------------------------------

TIMEOUT		= 100
MAX_WORKERS = 8

# ----------------------------------------------------------------------------------------